[{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://marcelosua.github.io/SPOTlight/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"load-packages","dir":"Articles","previous_headings":"","what":"Load packages","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"","code":"library(ggplot2) library(SPOTlight) library(SingleCellExperiment) library(SpatialExperiment) library(scater) library(scran)"},{"path":[]},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"what-is-spotlight","dir":"Articles","previous_headings":"Introduction","what":"What is SPOTlight?","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"SPOTlight tool enables deconvolution cell types cell type proportions present within capture location comprising mixtures cells. Originally developed 10X’s Visium - spatial transcriptomics - technology, can used technologies returning mixtures cells. SPOTlight based learning topic profile signatures, means NMFreg model, cell type finding combination cell types fits best spot want deconvolute. Find graphical abstract visually summarizing key steps.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"starting-point","dir":"Articles","previous_headings":"Introduction","what":"Starting point","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"minimal unit data required run SPOTlight : ST (sparse) matrix expression, raw normalized, rows = genes columns = capture locations. Single cell (sparse) matrix expression, raw normalized, rows = genes columns = cells. Vector indicating cell identity column single cell expression matrix. Data inputs can also objects class SpatialExperiment (SE), SingleCellExperiment (SCE) Seurat objects minimal data extracted.","code":""},{"path":[]},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"data-description","dir":"Articles","previous_headings":"Getting started","what":"Data description","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"vignette, use SE put 10X Genomics containing Visium kidney slide. raw data can accessed . SCE data comes Tabula Muris Consortium contains >350,000 cells male female mice belonging six age groups, ranging 1 30 months. dataset load kidney subset map Visium slide.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"loading-the-data","dir":"Articles","previous_headings":"Getting started","what":"Loading the data","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"datasets available Biocondcutor’s ExperimentHub can loaded R follows: Load spatial data: Load single cell data. Since data comes Tabula Muris Sensis dataset, can directly load SCE object follows: Quick data exploration: see good representation cell types across ages except 24m. order reduce potential noise introduced age batch effects going select cells coming age.","code":"library(ExperimentHub)  # initialize a Hub instance which stores a complete set of recordd eh <- ExperimentHub()  # retrieve any records that match our keyword(s) of interest query(eh, \"Tabula Muris Senis droplet Kidney\") ## ExperimentHub with 7 records ## # snapshotDate(): 2021-10-19 ## # $dataprovider: The Tabula Muris Consortium ## # $species: Mus musculus ## # $rdataclass: matrix, H5File, DFrame ## # additional mcols(): taxonomyid, genome, description, ## #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, ## #   rdatapath, sourceurl, sourcetype  ## # retrieve records with, e.g., 'object[[\"EH6386\"]]'  ##  ##            title                                              ##   EH6386 | Tabula Muris Senis droplet Kidney colData          ##   EH6387 | Tabula Muris Senis droplet Kidney counts           ##   EH6388 | Tabula Muris Senis droplet Kidney processed counts ##   EH6389 | Tabula Muris Senis droplet Kidney rowData          ##   EH6390 | Tabula Muris Senis droplet Kidney PCA              ##   EH6391 | Tabula Muris Senis droplet Kidney tSNE             ##   EH6392 | Tabula Muris Senis droplet Kidney UMAP query(eh, \"MouseKidneyCoronal\") ## ExperimentHub with 2 records ## # snapshotDate(): 2021-10-19 ## # $dataprovider: 10X Genomics ## # $species: Mus musculus ## # $rdataclass: SpatialExperiment ## # additional mcols(): taxonomyid, genome, description, ## #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, ## #   rdatapath, sourceurl, sourcetype  ## # retrieve records with, e.g., 'object[[\"EH6707\"]]'  ##  ##            title                    ##   EH6707 | MouseKidneyCoronal       ##   EH6743 | MouseKidneyCoronal_v3.13 library(TENxVisiumData) spe <- MouseKidneyCoronal() # Use symbols instead of Ensembl IDs as feature names rownames(spe) <- rowData(spe)$symbol library(TabulaMurisSenisData) sce <- TabulaMurisSenisDroplet(tissues = \"Kidney\")$Kidney table(sce$free_annotation, sce$age) ##                                                              ##                                                                1m   3m  18m ##   CD45                                                         11   32   76 ##   CD45    B cell                                                7    5   45 ##   CD45    NK cell                                               1    4    8 ##   CD45    T cell                                                8   18   48 ##   CD45    macrophage                                           59  132  254 ##   CD45    plasma cell                                           0    0    9 ##   Epcam     kidney distal convoluted tubule epithelial cell    78  126  169 ##   Epcam    brush cell                                          52   15   78 ##   Epcam    kidney collecting duct principal cell               77  110  132 ##   Epcam    kidney proximal convoluted tubule epithelial cell  945  684 1120 ##   Epcam    podocyte                                            92   94   64 ##   Epcam    proximal tube epithelial cell                       25  195  296 ##   Epcam    thick ascending tube S epithelial cell             465  312  248 ##   Pecam    Kidney cortex artery cell                           75   78   91 ##   Pecam    fenestrated capillary endothelial                  164  182  164 ##   Pecam    kidney capillary endothelial cell                   49   38   25 ##   Stroma    fibroblast                                         15   16   37 ##   Stroma    kidney mesangial cell                              80   51   18 ##   nan                                                         285  238  256 ##                                                              ##                                                               21m  24m  30m ##   CD45                                                         54 1010  106 ##   CD45    B cell                                               54 2322   62 ##   CD45    NK cell                                               2   47    4 ##   CD45    T cell                                               42  846  177 ##   CD45    macrophage                                          101  259  514 ##   CD45    plasma cell                                          12  169   42 ##   Epcam     kidney distal convoluted tubule epithelial cell   153    0  131 ##   Epcam    brush cell                                         169    0   31 ##   Epcam    kidney collecting duct principal cell               58    0  370 ##   Epcam    kidney proximal convoluted tubule epithelial cell  868    0  817 ##   Epcam    podocyte                                            66    0  170 ##   Epcam    proximal tube epithelial cell                        5    0 1977 ##   Epcam    thick ascending tube S epithelial cell             228    0  313 ##   Pecam    Kidney cortex artery cell                           69    0  115 ##   Pecam    fenestrated capillary endothelial                  134    0  211 ##   Pecam    kidney capillary endothelial cell                   18    0    7 ##   Stroma    fibroblast                                         13    0   80 ##   Stroma    kidney mesangial cell                              22    0    7 ##   nan                                                         189 1068  579 # Keep cells from 18m mice sce <- subset(sce, , age == \"18m\") # Keep cells with clear cell type annotations sce <- subset(sce, , !free_annotation %in% c(\"nan\", \"CD45\"))"},{"path":[]},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"preprocessing","dir":"Articles","previous_headings":"Workflow","what":"Preprocessing","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"dataset large want downsample train model, number cells number genes. , want keep representative amount cells per cluster biologically relevant genes. paper show downsampling number cells per cell identity ~100 doesn’t affect performance model. Including >100 cells per cell identity provides marginal improvement greatly increasing computational time resources. Furthermore, restricting gene set marker genes cell type along 3.000 highly variable genes optimizes performance computational resources. can find detailed explanation original paper.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"feature-selection","dir":"Articles","previous_headings":"Workflow > Preprocessing","what":"Feature selection","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"first step get marker genes cell type. follow Normalization procedure described OSCA. first carry library size normalization correct cell-specific biases:","code":"sce <- logNormCounts(sce)"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"variance-modelling","dir":"Articles","previous_headings":"Workflow > Preprocessing","what":"Variance modelling","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"aim identify highly variable genes drive biological heterogeneity. feeding genes model improve resolution biological structure reduce technical noise.  Next obtain marker genes cell identity. can use whichever method want long returns weight indicating importance gene cell type. Examples include avgLogFC, AUC, pct.expressed, p-value… want keep genes relevant cell identity:","code":"dec <- modelGeneVar(sce) plot(dec$mean, dec$total, xlab = \"Mean log-expression\", ylab = \"Variance\") curve(metadata(dec)$trend(x), col = \"blue\", add = TRUE) # Get the top 3000 genes. hvg <- getTopHVGs(dec, n = 3000) colLabels(sce) <- colData(sce)$free_annotation  # Get vector indicating which genes are neither ribosomal or mitochondrial genes <- !grepl(pattern = \"^Rp[l|s]|Mt\", x = rownames(sce))  # Compute marker genes mgs <- scoreMarkers(sce, subset.row = genes) mgs_fil <- lapply(names(mgs), function(i) {     x <- mgs[[i]]     # Filter and keep relevant marker genes, those with AUC > 0.8     x <- x[x$mean.AUC > 0.8, ]     # Sort the genes from highest to lowest weight     x <- x[order(x$mean.AUC, decreasing = TRUE), ]     # Add gene and cluster id to the dataframe     x$gene <- rownames(x)     x$cluster <- i     data.frame(x) }) mgs_df <- do.call(rbind, mgs_fil)"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"cell-downsampling","dir":"Articles","previous_headings":"Workflow > Preprocessing","what":"Cell Downsampling","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"Next, randomly select 100 cells per cell identity. cell type comprised <100 cells, cells used. biologically different cell identities (B cells vs. T cells vs. Macrophages vs. Epithelial) can use fewer cells since transcriptional profiles different. cases transcriptionally similar cell identities need increase N capture biological heterogeneity . experience found step better select cells cell type batch joint dataset multiple runs. ensure model removes much signal batch possible actually learns biological signal. purpose vignette speed analysis, going use 20 cells per cell identity:","code":"# split cell indices by identity idx <- split(seq(ncol(sce)), sce$free_annotation) # downsample to at most 20 per identity & subset n_cells <- 2 cs_keep <- lapply(idx, function(i) {     n <- length(i)     if (n < n_cells)         n_cells <- n     sample(i, n_cells) }) sce <- sce[, unlist(cs_keep)]"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"deconvolution","dir":"Articles","previous_headings":"Workflow","what":"Deconvolution","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"now set run SPOTlight deconvolute spots! Briefly, works: NMF used factorize matrix two lower dimensionality matrices without negative elements. first initial matrix V (SCE count matrix), factored W H. Unit variance normalization gene performed V order standardize discretized gene expression levels, ‘counts-umi’. Factorization carried using non-smooth NMF method, implemented R package NMF NMF (14). method intended return sparser results factorization W H, thus promoting cell-type-specific topic profile reducing overfitting training. running factorization, initialize topic, column, W unique marker genes cell type weights. turn, topic H SPOTlight initialized corresponding belongance cell topic, 1 0. way, seed model prior information, thus guiding towards biologically relevant result. initialization also aims reducing variability improving consistency runs. NNLS regression used map capture location’s transcriptome V’ (SE count matrix) H’ using W basis. obtain topic profile distribution capture location can use determine composition. obtain Q, cell-type specific topic profiles, H. select cells cell type compute median topic consensus cell-type-specific topic signature. use NNLS find weights cell type best fit H’ minimizing residuals. can visualize explanation following workflow scheme:  Extract data SPOTlight:","code":"res <- SPOTlight(     x = sce,     y = spe,     groups = sce$free_annotation,     mgs = mgs_df,     hvg = hvg,     weight_id = \"mean.AUC\",     group_id = \"cluster\",     gene_id = \"gene\") ## Scaling count matrix ## Seeding initial matrices ## Training NMF model ## Time for training: 0.2min ## Deconvoluting mixture data # Extract deconvolution matrix head(mat <- res$mat)[, seq_len(3)] ##                    CD45    B cell CD45    NK cell CD45    T cell ## AAACCGTTCGTCCAGG-1     0.04085780      0.03745327     0.09125076 ## AAACCTAAGCAGCCGG-1     0.00000000      0.00000000     0.09927724 ## AAACGAGACGGTTGAT-1     0.05342870      0.01022877     0.11173765 ## AAACGGTTGCGAACTG-1     0.02799133      0.03798122     0.07084192 ## AAACTCGGTTCGCAAT-1     0.01718571      0.14946677     0.08317662 ## AAACTGCTGGCTCCAA-1     0.07110740      0.05131965     0.08557376 # Extract NMF model fit mod <- res$NMF"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"next section show visualize data interpret SPOTlight’s results.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"topic-profiles","dir":"Articles","previous_headings":"Visualization","what":"Topic profiles","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"first take look Topic profiles. setting facet = FALSE want evaluate specific topic signature cell identity. Ideally cell identity unique topic profile associated seen .  Next also want ensure cells cell identity share similar topic profile since mean SPOTlight learned consistent signature cells cell identity.  Lastly can take look genes model learned topic. Higher values indicate gene relevant topic. table can see top genes Topic1 characteristic B cells (.e. Cd79a, Cd79b, Ms4a1…).","code":"plotTopicProfiles(     x = mod,     y = sce$free_annotation,     facet = FALSE,     min_prop = 0.01,     ncol = 1) +     theme(aspect.ratio = 1) plotTopicProfiles(     x = mod,     y = sce$free_annotation,     facet = TRUE,     min_prop = 0.01,     ncol = 6) library(NMF) sign <- basis(mod) colnames(sign) <- paste0(\"Topic\", seq_len(ncol(sign))) head(sign) ##            Topic1        Topic2        Topic3        Topic4      Topic5 ## Cd79a 0.002810294 4.234637e-319  0.000000e+00 6.705534e-221 0.001914301 ## Ly6d  0.004164431 2.064875e-248 2.478523e-285  0.000000e+00 0.001618620 ## Fau   0.006895937  2.490729e-03  1.553858e-03  1.942712e-03 0.001695927 ## Cd37  0.002678810 3.230637e-220  1.606590e-03  1.225580e-48 0.001991599 ## Cd79b 0.003905927 2.728267e-301  0.000000e+00 1.105812e-137 0.001339975 ## Cd74  0.001593506 1.968397e-175 2.540083e-226  1.486929e-03 0.001602849 ##              Topic6        Topic7        Topic8        Topic9       Topic10 ## Cd79a  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 ## Ly6d  8.975658e-316  0.000000e+00 1.729897e-307 5.433815e-314  2.696091e-04 ## Fau    1.692851e-60  5.041989e-16  1.945795e-66  1.568102e-11  6.454253e-04 ## Cd37  1.404302e-287 4.579565e-150 2.706540e-279 8.501571e-286  0.000000e+00 ## Cd79b  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 ## Cd74  8.529272e-230 7.334888e-239 1.694522e-234 1.525215e-204 6.501910e-292 ##             Topic11       Topic12       Topic13       Topic14       Topic15 ## Cd79a  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 ## Ly6d   0.000000e+00 1.704725e-302 1.477727e-300  0.000000e+00 4.943387e-298 ## Fau    1.391518e-15  4.520660e-26  1.159283e-04  7.740333e-18  7.263718e-30 ## Cd37   0.000000e+00 2.667158e-274 2.312004e-272 3.517747e-321 7.734263e-270 ## Cd79b  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 ## Cd74  2.976077e-301 1.747066e-243 8.821218e-161  4.980218e-20 4.804072e-225 ##             Topic16       Topic17 ## Cd79a  0.000000e+00  0.000000e+00 ## Ly6d   0.000000e+00  0.000000e+00 ## Fau    2.607292e-04  3.976858e-67 ## Cd37   0.000000e+00 9.653549e-320 ## Cd79b  0.000000e+00  0.000000e+00 ## Cd74  1.765619e-282 1.843635e-238 # This can be dynamically visualized with DT as shown below # DT::datatable(sign, fillContainer = TRUE, filter = \"top\")"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"spatial-correlation-matrix","dir":"Articles","previous_headings":"Visualization","what":"Spatial Correlation Matrix","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"See additional graphical parameters.","code":"plotCorrelationMatrix(mat)"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"co-localization","dir":"Articles","previous_headings":"Visualization","what":"Co-localization","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"Now know cell types found within spot can make graph representing spatial interactions cell types stronger edges often find within spot. See additional graphical parameters.","code":"plotInteractions(mat, \"heatmap\") plotInteractions(mat, \"network\")"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"scatterpie","dir":"Articles","previous_headings":"Visualization","what":"Scatterpie","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"can also visualize cell type proportions sections pie chart spot. can modify colors standard ggplot2.","code":"ct <- colnames(mat) mat[mat < 0.1] <- 0  # Define color palette # (here we use 'paletteMartin' from the 'colorBlindness' package) paletteMartin <- c(     \"#000000\", \"#004949\", \"#009292\", \"#ff6db6\", \"#ffb6db\",      \"#490092\", \"#006ddb\", \"#b66dff\", \"#6db6ff\", \"#b6dbff\",      \"#920000\", \"#924900\", \"#db6d00\", \"#24ff24\", \"#ffff6d\")  pal <- colorRampPalette(paletteMartin)(length(ct)) names(pal) <- ct  plotSpatialScatterpie(     x = spe,     y = mat,     cell_types = colnames(y),     img = FALSE,     scatterpie_alpha = 1,     pie_scale = 0.4) +     scale_fill_manual(         values = pal,         breaks = names(pal))"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"residuals","dir":"Articles","previous_headings":"Visualization","what":"Residuals","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"Lastly can also take look well model predicted proportions spot. looking residuals sum squares spot indicates amount biological signal explained model.","code":"spe$res_ss <- res[[2]][colnames(spe)] xy <- spatialCoords(spe) spe$x <- xy[, 1] spe$y <- xy[, 2] ggcells(spe, aes(x, y, color = res_ss)) +     geom_point() +     scale_color_viridis_c() +     coord_fixed() +     theme_bw()"},{"path":"https://marcelosua.github.io/SPOTlight/articles/SPOTlight_kidney.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Spatial Transcriptomics Deconvolution with `SPOTlight`","text":"","code":"sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/atlas/libblas.so.3.10.3 ## LAPACK: /usr/lib/x86_64-linux-gnu/atlas/liblapack.so.3.10.3 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=es_ES.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=es_ES.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=es_ES.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=es_ES.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] NMF_0.23.0                  cluster_2.1.2               ##  [3] rngtools_1.5.2              pkgmaker_0.32.2             ##  [5] registry_0.5-1              rhdf5_2.38.0                ##  [7] TabulaMurisSenisData_1.0.0  TENxVisiumData_1.2.0        ##  [9] ExperimentHub_2.2.0         AnnotationHub_3.2.0         ## [11] BiocFileCache_2.2.0         dbplyr_2.1.1                ## [13] scran_1.22.1                scater_1.22.0               ## [15] scuttle_1.4.0               SpatialExperiment_1.4.0     ## [17] SingleCellExperiment_1.16.0 SummarizedExperiment_1.24.0 ## [19] GenomicRanges_1.46.1        GenomeInfoDb_1.30.0         ## [21] IRanges_2.28.0              S4Vectors_0.32.3            ## [23] MatrixGenerics_1.6.0        matrixStats_0.61.0          ## [25] SPOTlight_0.99.0            Biobase_2.54.0              ## [27] BiocGenerics_0.40.0         ggplot2_3.3.5               ## [29] BiocStyle_2.22.0            ##  ## loaded via a namespace (and not attached): ##   [1] systemfonts_1.0.3             plyr_1.8.6                    ##   [3] igraph_1.2.9                  BiocParallel_1.28.2           ##   [5] gridBase_0.4-7                digest_0.6.29                 ##   [7] foreach_1.5.1                 htmltools_0.5.2               ##   [9] viridis_0.6.2                 magick_2.7.3                  ##  [11] gdata_2.18.0                  fansi_0.5.0                   ##  [13] magrittr_2.0.1                memoise_2.0.1                 ##  [15] ScaledMatrix_1.2.0            doParallel_1.0.16             ##  [17] limma_3.50.0                  Biostrings_2.62.0             ##  [19] R.utils_2.11.0                pkgdown_2.0.2                 ##  [21] colorspace_2.0-2              rappdirs_0.3.3                ##  [23] blob_1.2.2                    ggrepel_0.9.1                 ##  [25] textshaping_0.3.6             xfun_0.28                     ##  [27] dplyr_1.0.7                   crayon_1.4.2                  ##  [29] RCurl_1.98-1.5                jsonlite_1.7.2                ##  [31] scatterpie_0.1.7              iterators_1.0.13              ##  [33] glue_1.5.1                    polyclip_1.10-0               ##  [35] gtable_0.3.0                  nnls_1.4                      ##  [37] zlibbioc_1.40.0               XVector_0.34.0                ##  [39] DelayedArray_0.20.0           BiocSingular_1.10.0           ##  [41] DropletUtils_1.14.1           Rhdf5lib_1.16.0               ##  [43] HDF5Array_1.22.1              scales_1.1.1                  ##  [45] DBI_1.1.1                     edgeR_3.36.0                  ##  [47] Rcpp_1.0.7                    viridisLite_0.4.0             ##  [49] xtable_1.8-4                  dqrng_0.3.0                   ##  [51] bit_4.0.4                     rsvd_1.0.5                    ##  [53] httr_1.4.2                    metapod_1.2.0                 ##  [55] RColorBrewer_1.1-2            ellipsis_0.3.2                ##  [57] farver_2.1.0                  pkgconfig_2.0.3               ##  [59] R.methodsS3_1.8.1             sass_0.4.0                    ##  [61] locfit_1.5-9.4                utf8_1.2.2                    ##  [63] ggcorrplot_0.1.3              labeling_0.4.2                ##  [65] AnnotationDbi_1.56.2          later_1.3.0                   ##  [67] tidyselect_1.1.1              rlang_0.4.12                  ##  [69] reshape2_1.4.4                BiocVersion_3.14.0            ##  [71] munsell_0.5.0                 tools_4.1.2                   ##  [73] cachem_1.0.6                  generics_0.1.1                ##  [75] RSQLite_2.2.9                 evaluate_0.14                 ##  [77] stringr_1.4.0                 fastmap_1.1.0                 ##  [79] yaml_2.2.1                    ragg_1.2.1                    ##  [81] knitr_1.36                    bit64_4.0.5                   ##  [83] fs_1.5.1                      purrr_0.3.4                   ##  [85] KEGGREST_1.34.0               sparseMatrixStats_1.6.0       ##  [87] mime_0.12                     R.oo_1.24.0                   ##  [89] compiler_4.1.2                png_0.1-7                     ##  [91] interactiveDisplayBase_1.32.0 filelock_1.0.2                ##  [93] curl_4.3.2                    beeswarm_0.4.0                ##  [95] tweenr_1.0.2                  tibble_3.1.6                  ##  [97] statmod_1.4.36                bslib_0.3.1                   ##  [99] stringi_1.7.6                 highr_0.9                     ## [101] desc_1.4.0                    lattice_0.20-45               ## [103] bluster_1.4.0                 Matrix_1.3-4                  ## [105] vctrs_0.3.8                   pillar_1.6.4                  ## [107] lifecycle_1.0.1               rhdf5filters_1.6.0            ## [109] BiocManager_1.30.16           jquerylib_0.1.4               ## [111] BiocNeighbors_1.12.0          bitops_1.0-7                  ## [113] irlba_2.3.4                   httpuv_1.6.3                  ## [115] R6_2.5.1                      promises_1.2.0.1              ## [117] bookdown_0.24                 gridExtra_2.3                 ## [119] vipor_0.4.5                   codetools_0.2-18              ## [121] MASS_7.3-54                   gtools_3.9.2                  ## [123] assertthat_0.2.1              rprojroot_2.0.2               ## [125] rjson_0.2.20                  withr_2.4.3                   ## [127] SeuratObject_4.0.4            GenomeInfoDbData_1.2.7        ## [129] parallel_4.1.2                ggfun_0.0.4                   ## [131] grid_4.1.2                    beachmat_2.10.0               ## [133] tidyr_1.1.4                   rmarkdown_2.11                ## [135] DelayedMatrixStats_1.16.0     ggforce_0.3.3                 ## [137] shiny_1.7.1                   ggbeeswarm_0.6.0"},{"path":"https://marcelosua.github.io/SPOTlight/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Elosua-Bayes. Author, maintainer. Helena L. Crowell. Author.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Elosua-Bayes M, Crowell H (2022). SPOTlight: 'SPOTlight': Spatial Transcriptomics Deconvolution. https://github.com/MarcElosua/SPOTlight, https://marcelosua.github.io/SPOTlight.","code":"@Manual{,   title = {SPOTlight: `SPOTlight`: Spatial Transcriptomics Deconvolution},   author = {Marc Elosua-Bayes and Helena L. Crowell},   year = {2022},   note = {https://github.com/MarcElosua/SPOTlight, https://marcelosua.github.io/SPOTlight}, }"},{"path":"https://marcelosua.github.io/SPOTlight/index.html","id":"welcome-to-spotlight-","dir":"","previous_headings":"","what":"`SPOTlight`: Spatial Transcriptomics Deconvolution","title":"`SPOTlight`: Spatial Transcriptomics Deconvolution","text":"SPOTlight provides tool enables deconvolution mixtures cells single-cell reference. Originally developed 10X’s Visium - spatial transcriptomics- technology, can used technologies output mixtures cells. compatible Bioconductor’s SingleCellExperiment SpatialExperiment classes well Seurat objects. Furthermore, package also provides visualization tools assess results deconvolution. Briefly, SPOTlight based finding topic profile signatures, means NMFreg model, cell type optimizing cell types proportions fit mixture want deconvolute.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"`SPOTlight`: Spatial Transcriptomics Deconvolution","text":"Alternatively, can install GitHub using devtools package.","code":"install.packages(\"BiocManager\") BiocManager::install(\"SPOTlight\") # Or the devel version BiocManager::install(\"SPOTlight\", version = \"devel\") install.packages(\"devtools\") library(devtools) install_github(\"https://github.com/MarcElosua/SPOTlight\")"},{"path":"https://marcelosua.github.io/SPOTlight/index.html","id":"references","dir":"","previous_headings":"Installation","what":"References","title":"`SPOTlight`: Spatial Transcriptomics Deconvolution","text":"Elosua-Bayes M, Nieto P, Mereu E, Gut , Heyn H (2021): SPOTlight: seeded NMF regression deconvolute spatial transcriptomics spots single-cell transcriptomes. Nucleic Acids Res 49(9):e50. doi:10.1093/nar/gkab043.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/index.html","id":"contributors","dir":"","previous_headings":"Installation","what":"Contributors","title":"`SPOTlight`: Spatial Transcriptomics Deconvolution","text":"SPOTlight originally developed Marc Elosua Bayes received substantial additional contributions Helena L. Crowell.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/index.html","id":"issues---ideas","dir":"","previous_headings":"Installation","what":"Issues - Ideas?","title":"`SPOTlight`: Spatial Transcriptomics Deconvolution","text":"SPOTlight still active development. greatly welcome (highly encourage!) feedback, bug reports suggestions improvement . Please make sure raise issues reproducible example output sessionInfo().","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution of mixture using single-cell data — SPOTlight","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"backbone function takes single cell   expression data deconvolute spatial transcriptomics spots.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"","code":"# S4 method for SingleCellExperiment,ANY SPOTlight(   x,   y,   ...,   assay = \"counts\",   groups = colLabels(x, onAbsence = \"error\") )  # S4 method for ANY,SingleCellExperiment SPOTlight(x, y, ..., assay = \"counts\")  # S4 method for Seurat,ANY SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\", groups = Idents(x))  # S4 method for ANY,Seurat SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\")  # S4 method for ANY,dgCMatrix SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\")  # S4 method for dgCMatrix,ANY SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\")  # S4 method for ANY,DelayedMatrix SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\")  # S4 method for DelayedMatrix,ANY SPOTlight(x, y, ..., slot = \"counts\", assay = \"RNA\")  # S4 method for ANY,ANY SPOTlight(x, y, ...)  # S4 method for matrix,matrix SPOTlight(   x,   y,   groups,   mgs,   n_top = NULL,   gene_id = \"gene\",   group_id = \"cluster\",   weight_id = \"weight\",   hvg = NULL,   scale = TRUE,   model = c(\"ns\", \"std\"),   min_prop = 0.01,   verbose = TRUE,   ... )"},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"x, y single-cell mixture dataset, respectively. Can numeric matrix, SingleCellExperiment SeuratObjecy. ... additional parameters. assay object Class Seurat, character string specifying assay extract expression matrix. default \"RNA\". groups vector group labels cells x. x SingleCellExperiment SeuratObject, defaults colLabels Idents(x), respectively. slot object Class Seurat, character string specifying slot extract expression matrix. default \"counts\". mgs data.frame DataFrame marker genes. Must contain columns holding gene identifiers, group labels weight (e.g., logFC, -log(p-value) feature given group. n_top integer scalar specifying number markers select per group. default NULL uses marker genes initialize model. gene_id, group_id, weight_id character specifying column mgs containing gene identifiers, group labels weights, respectively. hvg character vector containing hvg include model. default NULL. scale logical specifying whether scale single-cell counts unit variance. gives user option normalize data beforehand see fit (CPM, FPKM, ...) passing matrix specifying slot extract count data. model character string indicating model use running NMF. Either \"ns\" (default) \"std\". min_prop scalar [0,1] setting minimum contribution expected cell type x observations y. default 0. verbose logical. information progress reported?","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"numeric matrix rows corresponding samples   columns groups","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"SPOTlight uses Non-Negative Matrix Factorization approach learn   genes important cell type. order drive   factorization give importance cell type marker genes   previously compute use initialize basis matrix.   initialized matrices used carry factorization   single cell expression data. model learn topic   profiles cell type use non-negative least squares (NNLS)   obtain topic contributions spot. Lastly, NNLS used   obtain proportion cell type spot finding   fitting single-cell topic profiles spots topic contributions.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"Marc Elosua-Bayes & Helena L. Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/SPOTlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deconvolution of mixture using single-cell data — SPOTlight","text":"","code":"library(scater) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘matrixStats’ #> The following objects are masked from ‘package:Biobase’: #>  #>     anyMissing, rowMedians #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> The following object is masked from ‘package:Biobase’: #>  #>     rowMedians #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: scuttle #> Loading required package: ggplot2 library(scran) library(ExperimentHub) #> Loading required package: AnnotationHub #> Loading required package: BiocFileCache #> Loading required package: dbplyr #>  #> Attaching package: ‘AnnotationHub’ #> The following object is masked from ‘package:Biobase’: #>  #>     cache library(TENxVisiumData) #> Loading required package: SpatialExperiment #> snapshotDate(): 2021-10-19  # Initialize a Hub instance storing a complete set of records eh <- ExperimentHub() #> snapshotDate(): 2021-10-19  # Retrieve any records that match our keyword(s) of interest query(eh, \"Tabula Muris Senis droplet Kidney\") #> ExperimentHub with 7 records #> # snapshotDate(): 2021-10-19 #> # $dataprovider: The Tabula Muris Consortium #> # $species: Mus musculus #> # $rdataclass: matrix, H5File, DFrame #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"EH6386\"]]'  #>  #>            title                                              #>   EH6386 | Tabula Muris Senis droplet Kidney colData          #>   EH6387 | Tabula Muris Senis droplet Kidney counts           #>   EH6388 | Tabula Muris Senis droplet Kidney processed counts #>   EH6389 | Tabula Muris Senis droplet Kidney rowData          #>   EH6390 | Tabula Muris Senis droplet Kidney PCA              #>   EH6391 | Tabula Muris Senis droplet Kidney tSNE             #>   EH6392 | Tabula Muris Senis droplet Kidney UMAP             query(eh, \"MouseKidneyCoronal\") #> ExperimentHub with 2 records #> # snapshotDate(): 2021-10-19 #> # $dataprovider: 10X Genomics #> # $species: Mus musculus #> # $rdataclass: SpatialExperiment #> # additional mcols(): taxonomyid, genome, description, #> #   coordinate_1_based, maintainer, rdatadateadded, preparerclass, tags, #> #   rdatapath, sourceurl, sourcetype  #> # retrieve records with, e.g., 'object[[\"EH6707\"]]'  #>  #>            title                    #>   EH6707 | MouseKidneyCoronal       #>   EH6743 | MouseKidneyCoronal_v3.13  # Get Visium data from 'TENxVisiumData' spe <- MouseKidneyCoronal() #> see ?TENxVisiumData and browseVignettes('TENxVisiumData') for documentation #> loading from cache  # Use symbols instead of Ensembl IDs as feature names rownames(spe) <- rowData(spe)$symbol  # Load SCE data library(TabulaMurisSenisData) sce <- TabulaMurisSenisDroplet(tissues = \"Kidney\")$Kidney #> snapshotDate(): 2021-10-19 #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache #> require(“rhdf5”) #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache #> see ?TabulaMurisSenisData and browseVignettes('TabulaMurisSenisData') for documentation #> loading from cache  # Keep cells from 18m mice with clear cell type annotations sce <- subset(sce, , age == \"18m\") sce <- subset(sce, , ! free_annotation %in% c(\"nan\", \"CD45\"))  # Get the top 3000 highly variable genes sce <- logNormCounts(sce) dec <- modelGeneVar(sce) hvg <- getTopHVGs(dec, n = 3000) colLabels(sce) <- colData(sce)$free_annotation  # Get vector indicating which genes # are neither ribosomal or mitochondrial genes <- !grepl(\"^Rp[l|s]|Mt\", rownames(sce))  # Compute marker genes mgs <- scoreMarkers(sce, subset.row = genes) mgs_ls <- lapply(names(mgs), function(i){   x <- mgs[[i]]   # Filter and keep relevant marker genes, those with AUC > 0.8   x <- x[x$mean.AUC > 0.8, ]   # Sort the genes from highest to lowest weight   x <- x[order(x$mean.AUC, decreasing = TRUE), ]   # Add gene and cluster id to the dataframe   x$gene <- rownames(x)   x$cluster <- i   data.frame(x) }) mgs_df <- do.call(rbind, mgs_ls)  # split cell indices by identity idx <- split(seq(ncol(sce)), sce$free_annotation) # downsample to at most 20 cells per identity n_cells <- 20 cs_keep <- lapply(idx, function(i) {   n <- length(i)   if (n < n_cells)     n_cells <- n   sample(i, n_cells) }) sce <- sce[, unlist(cs_keep)]  res <- SPOTlight(     x = counts(sce),     y = counts(spe),     groups = sce$free_annotation,     mgs = mgs_df,     hvg = hvg,     weight_id = \"mean.AUC\",     group_id = \"cluster\",     gene_id = \"gene\") #> Scaling count matrix #> Seeding initial matrices #> Training NMF model #> Time for training: 8.95min #> Deconvoluting mixture data"},{"path":"https://marcelosua.github.io/SPOTlight/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic single-cell, mixture and marker data — data","title":"Synthetic single-cell, mixture and marker data — data","text":".mock_sc/sp() designed generate synthetic single-cell spatial mixture data. data meant represent biologically meaningful use-cases, solely intended use examples, unit-testing, demonstrate SPOTlight's general functionality. Finally, .get_mgs() implements statistically naive way select markers single-cell data; , please use real life.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic single-cell, mixture and marker data — data","text":"","code":".mock_sc(ng = 200, nc = 50, nt = 3)  .mock_sp(x, ns = 100)  .get_mgs(x, n_top = 10)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synthetic single-cell, mixture and marker data — data","text":"ng, nc, nt, ns integer scalar specifying number genes, cells, types (groups) spots simulate. x Single cell experiment object ç n_top integer specifying number marker genes extract cluster.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synthetic single-cell, mixture and marker data — data","text":".mock_sc returns SingleCellExperiment   rows = genes, columns = single cells, cell metadata   (colData) column type containing group identifiers. .mock_sp returns SingleCellExperiment   rows = genes, columns = single cells, cell metadata   (colData) column type containing group identifiers. .get_mgs returns data.frame nt*n_top   rows 3 columns: gene type (group) identifier, well   gene's weight = proportion counts accounted type.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic single-cell, mixture and marker data — data","text":"","code":"sce <- .mock_sc() spe <- .mock_sp(sce) mgs <- .get_mgs(sce)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Correlation Matrix — plotCorrelationMatrix","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"function takes matrix predicted proportions   spot returns correlation matrix cell types.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"","code":"# S4 method for matrix plotCorrelationMatrix(   x,   cor.method = c(\"pearson\", \"kendall\", \"spearman\"),   insig = c(\"blank\", \"pch\"),   colors = c(\"#6D9EC1\", \"white\", \"#E46726\"),   hc.order = TRUE,   p.mat = TRUE,   ... )"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"x numeric matrix rows = samples columns = cell types Must least two rows two columns. cor.method Method use correlation: c(\"pearson\", \"kendall\", \"spearman\"). default pearson. insig character, specialized insignificant correlation coefficients, \"pch\", \"blank\" (default). \"blank\", wipe away corresponding glyphs; \"pch\", add characters (see pch details) corresponding glyphs. colors character vector three colors indicating lower, mid, high color. default c(\"#6D9EC1\", \"white\", \"#E46726\"). hc.order logical value. TRUE, correlation matrix hc.ordered using hclust function. p.mat logical value. TRUE (default), correlation significance used. FALSE arguments sig.level, insig, pch, pch.col, pch.cex invalid. ... additional graphical parameters passed ggcorrplot.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"ggplot object","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"Marc Elosua Bayes & Helena L Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotCorrelationMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Correlation Matrix — plotCorrelationMatrix","text":"","code":"set.seed(321) x <- replicate(m <- 25, runif(10, 0, 1)) rownames(x) <- paste0(\"spot\", seq_len(nrow(x))) colnames(x) <- paste0(\"type\", seq_len(ncol(x)))  # The most basic example plotCorrelationMatrix(x = x)   # Showing the non-significant correlatinos plotCorrelationMatrix(x = x, insig = \"pch\")   # A more elaborated plotCorrelationMatrix(     x = x,     hc.order = FALSE,     type = \"lower\",     outline.col = \"lightgrey\",     method = \"circle\",     colors = c(\"#64ccc9\", \"#b860bd\", \"#e3345d\")) #> Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"function takes image-related object - path   JP(E)G/PNG file, raster object, RGBarray. returns ggplot object   selected image.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"","code":"# S4 method for character plotImage(x)  # S4 method for Seurat plotImage(x, slice = Images(x)[1])  # S4 method for SpatialExperiment plotImage(x, slice = imgData(x)[1, \"sample_id\"])  # S4 method for array plotImage(x, alpha = NULL)  # S4 method for ANY plotImage(x)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"x variety objects can passed: character string corresponding image file path, valid file types JPG, JPEG PNG. can also take input objects class raster RGB arrays. can also take SpatialExperiment Seurat object image extracted. slice Character string indicating image slice use SpatialExperiment Seurat objects passed. default uses first slice available. alpha IMPLEMENTED - single numeric 0 1 determining image opacity. Lower values correspond transparency.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"ggplot object","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"Marc Elosua Bayes & Helena L Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot JP(E)G/PNG/Raster/RGB images — plotImage","text":"","code":"# Filename path <- file.path(   system.file(package = \"SPOTlight\"),    \"extdata/SPOTlight.png\") plotImage(x = path)  # array png_img <- png::readPNG(path) plotImage(png_img)  # Seurat Object # library(SeuratData) # so <- LoadData(\"stxBrain\", type = \"anterior1\") # plotImage(so) # SpatialExperiment library(TENxVisiumData) spe <- MouseKidneyCoronal() #> see ?TENxVisiumData and browseVignettes('TENxVisiumData') for documentation #> loading from cache plotImage(spe)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot group interactions — plotInteractions","title":"Plot group interactions — plotInteractions","text":"function takes matrix predicted proportions   spot returns heatmap = plotHeatmap network    graph = plotNetwork show cells interacting    spatially.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot group interactions — plotInteractions","text":"","code":"plotInteractions(x, which = c(\"heatmap\", \"network\"), min_prop = 0, ...)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot group interactions — plotInteractions","text":"x numeric matrix rows = samples columns = groups. Must least one row column, least two columns. character string specifying type visualization: one \"heatmap\" \"network\". min_prop scalar specifying value group considered contributing given sample. interaction groups j counted sample s x[s, ] x[s, j] fall min_prop. ... additional graphical parameters passed plot.igraph = \"network\" (see ?igraph.plotting).","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot group interactions — plotInteractions","text":"base R plot","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot group interactions — plotInteractions","text":"Marc Elosua Bayes & Helena L Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotInteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot group interactions — plotInteractions","text":"","code":"library(ggplot2) mat <- replicate(8, rnorm(100, runif(1, -1, 1))) # Basic example plotInteractions(mat)   ### heatmap ### # This returns a ggplot object that can be modified as such plotInteractions(mat, which = \"heatmap\") +     scale_fill_gradient(low = \"#f2e552\", high = \"#850000\") +     labs(title = \"Interaction heatmap\", fill = \"proportion\") #> Scale for 'fill' is already present. Adding another scale for 'fill', which #> will replace the existing scale.           ### Network ### # specify node names nms <- letters[seq_len(ncol(mat))] plotInteractions(mat, which = \"network\", vertex.label = nms)   # or set column names instead colnames(mat) <- nms plotInteractions(mat, which = \"network\")   # pass additional graphical parameters for aesthetics plotInteractions(mat,     which = \"network\",     edge.color = \"cyan\",     vertex.color = \"pink\",     vertex.label.font = 2,     vertex.label.color = \"maroon\")"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial scatterpie — plotSpatialScatterpie","title":"Spatial scatterpie — plotSpatialScatterpie","text":"function takes coordinates spots   proportions cell types within spot. returns plot   spot piechart showing proportions cell type composition.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial scatterpie — plotSpatialScatterpie","text":"","code":"# S4 method for matrix,matrix plotSpatialScatterpie(   x,   y,   ...,   cell_types = colnames(y),   img = FALSE,   scatterpie_alpha = 1,   pie_scale = 0.4 )  # S4 method for Seurat,ANY plotSpatialScatterpie(x, y, ..., slice = Images(x)[1], img = FALSE)  # S4 method for SpatialExperiment,ANY plotSpatialScatterpie(   x,   y,   ...,   slice = imgData(x)[1, \"sample_id\"],   img = FALSE )  # S4 method for data.frame,ANY plotSpatialScatterpie(x, y, ...)  # S4 method for ANY,data.frame plotSpatialScatterpie(x, y, ...)  # S4 method for ANY,ANY plotSpatialScatterpie(x, y, ...)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial scatterpie — plotSpatialScatterpie","text":"x Object containig spots coordinates, can object class SpatialExperiment, Seurat, dataframe matrix. latter two rownames spot barcodes match x. y Matrix dataframe containing deconvoluted spots. rownames hould spot barcodes match x. ... additional parameters geom_scatterpie cell_types Vector cell type names plot. default uses column names y. img Logical TRUE FALSE indicating whether plot image . Objects classes accepted plotImage can also passed image used. default FALSE. scatterpie_alpha Numeric scalar set alpha pie charts. default 1. pie_scale Numeric scalar set size pie charts. default 0.4. slice Character string indicating slice plot img TRUE. default uses first image.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial scatterpie — plotSpatialScatterpie","text":"ggplot object","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatial scatterpie — plotSpatialScatterpie","text":"Marc Elosua Bayes & Helena L Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotSpatialScatterpie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial scatterpie — plotSpatialScatterpie","text":"","code":"set.seed(321)  # Coordinates x <- replicate(2, rnorm(100)) rownames(x) <- paste0(\"spot\", seq_len(nrow(x))) colnames(x) <- c(\"imagecol\", \"imagerow\")  # Proportions y <- replicate(m <- 5, runif(nrow(x), 0, 1)) y <- prop.table(y, 1)  rownames(y) <- paste0(\"spot\", seq_len(nrow(y))) colnames(y) <- paste0(\"type\", seq_len(ncol(y)))  (plt <- plotSpatialScatterpie(x = x, y = y))"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot NMF topic profiles — plotTopicProfiles","title":"Plot NMF topic profiles — plotTopicProfiles","text":"function takes fitted NMF model returns   topic profiles learned cell facet = FALSE cell type   facet = TRUE. Ideal training return cell   cell type share unique topic profile.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot NMF topic profiles — plotTopicProfiles","text":"","code":"# S4 method for NMF,ANY plotTopicProfiles(x, y, ...)  # S4 method for NMF,character plotTopicProfiles(x, y, facet = FALSE, min_prop = 0.1, ncol = NULL)"},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot NMF topic profiles — plotTopicProfiles","text":"x NMFfit object y vector group labels. length ncol(coef(x)). ... additional parameters facet logical indicating whether stratify group. FALSE (default), weights median across cells group (point = topic weight given cell type). TRUE, cell-specific weights shown (point = topic weight given cell). min_prop scalar [0,1]. facet = TRUE, cells weight > min_prop included. ncol integer scalar specifying number facet columns.","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot NMF topic profiles — plotTopicProfiles","text":"ggplot object","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot NMF topic profiles — plotTopicProfiles","text":"Marc Elosua Bayes & Helena L Crowell","code":""},{"path":"https://marcelosua.github.io/SPOTlight/reference/plotTopicProfiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot NMF topic profiles — plotTopicProfiles","text":"","code":"library(ggplot2) x <- .mock_sc() y <- .mock_sp(x) z <- .get_mgs(x)  res <- SPOTlight(x, y,     groups = x$type,     mgs = z,     group_id = \"type\",     verbose = FALSE)  plotTopicProfiles(res[[3]], x$type, facet = TRUE)  plotTopicProfiles(res[[3]], x$type, facet = FALSE)"}]
